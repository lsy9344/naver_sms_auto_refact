name: rule-engine-tests

on:
  push:
    branches:
      - main
    paths:
      - "src/**"
      - "tests/**"
      - ".github/workflows/test.yml"
      - "requirements.txt"
      - ".bandit"
      - "VALIDATION.md"
  pull_request:
    paths:
      - "src/**"
      - "tests/**"
      - ".github/workflows/test.yml"
      - "requirements.txt"
      - ".bandit"
      - "VALIDATION.md"

jobs:
  rule-engine-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run unit tests with coverage
        run: |
          pytest tests/unit tests/comparison tests/integration -v \
            --cov=src --cov-report=term-missing --cov-report=json \
            --junit-xml=test-results.xml

      - name: Run failure scenario tests (Story 4.4)
        run: |
          pytest tests/integration/test_failure_scenarios.py -v \
            --junit-xml=failure-results.xml || true

      - name: Run Slack integration tests (Story 4.4)
        run: |
          pytest tests/integration/test_slack_integration.py -v \
            --junit-xml=slack-results.xml || true

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: |
            test-results.xml
            failure-results.xml
            slack-results.xml
            coverage.json
          retention-days: 30

      - name: Check coverage threshold
        run: |
          python -m pytest tests --cov=src --cov-fail-under=80 \
            --cov-report=term-missing

      - name: Run Bandit security scan
        env:
          MOCK_AWS: ""
          AWS_PROFILE: ""
        run: |
          unset MOCK_AWS
          unset AWS_PROFILE
          bandit -c .bandit --severity-level medium --confidence-level medium -r src

name: Full Test Suite

on:
  workflow_dispatch:
    inputs:
      run_security_scan:
        description: "Run security scan (Bandit)"
        required: false
        default: "true"
        type: boolean
      coverage_threshold:
        description: "Minimum coverage percentage"
        required: false
        default: "70"
        type: string

jobs:
  full-test-suite:
    name: Complete Test Suite (All 653 tests)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run complete test suite
        run: |
          echo "🧪 Running FULL test suite (653 tests)..."
          echo "This may take 15-20 minutes..."
          echo ""

          pytest tests/unit tests/integration tests/comparison \
            -v \
            --tb=short \
            --junit-xml=full-test-results.xml \
            --cov=src \
            --cov-report=term-missing \
            --cov-report=html \
            --cov-report=json \
            --cov-fail-under=${{ inputs.coverage_threshold }}
        env:
          MOCK_AWS: "true"

      - name: Run security scan
        if: ${{ inputs.run_security_scan == 'true' }}
        run: |
          echo "🔒 Running security scan with Bandit..."
          bandit -c .bandit \
            --severity-level medium \
            --confidence-level medium \
            -r src \
            --exit-zero \
            --format json \
            -o bandit-report.json

          echo ""
          echo "Security scan completed. Check bandit-report.json for details."

      - name: Generate test summary
        if: always()
        run: |
          cat > test-summary.txt << 'EOF'
          ═══════════════════════════════════════════════════════
          FULL TEST SUITE SUMMARY
          ═══════════════════════════════════════════════════════

          Test Execution: Complete
          Total Tests: 653
          Coverage Threshold: ${{ inputs.coverage_threshold }}%
          Security Scan: ${{ inputs.run_security_scan }}

          Test Categories:
            ✓ Unit Tests
            ✓ Integration Tests
            ✓ Comparison Tests
            ✓ Rules Tests

          Artifacts:
            - full-test-results.xml
            - coverage.json
            - coverage HTML report
            - bandit-report.json (if enabled)

          ═══════════════════════════════════════════════════════
          EOF

          cat test-summary.txt

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: full-test-results
          path: |
            full-test-results.xml
            coverage.json
            htmlcov/
            bandit-report.json
          retention-days: 30

      - name: Upload coverage to Codecov
        if: always()
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.json
          flags: full-suite
          name: full-test-coverage
          fail_ci_if_error: false

      - name: Comment on commit (if triggered from commit)
        if: always() && github.event_name == 'workflow_dispatch'
        run: |
          echo "📊 Full test suite completed!"
          echo "Results are available in the Actions tab."
          echo ""
          echo "Artifacts uploaded:"
          echo "  - Test results (JUnit XML)"
          echo "  - Coverage report (JSON + HTML)"
          echo "  - Security scan results (if enabled)"

  notify:
    name: Send Notification
    runs-on: ubuntu-latest
    needs: full-test-suite
    if: always()

    steps:
      - name: Determine status
        id: status
        run: |
          if [ "${{ needs.full-test-suite.result }}" = "success" ]; then
            echo "emoji=✅" >> $GITHUB_OUTPUT
            echo "message=Full test suite passed successfully" >> $GITHUB_OUTPUT
            echo "color=good" >> $GITHUB_OUTPUT
          else
            echo "emoji=❌" >> $GITHUB_OUTPUT
            echo "message=Full test suite failed" >> $GITHUB_OUTPUT
            echo "color=danger" >> $GITHUB_OUTPUT
          fi

      - name: Print summary
        run: |
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo "${{ steps.status.outputs.emoji }} FULL TEST SUITE RESULT"
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo ""
          echo "Status: ${{ needs.full-test-suite.result }}"
          echo "Triggered by: ${{ github.actor }}"
          echo "Branch: ${{ github.ref_name }}"
          echo ""
          echo "View results: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
